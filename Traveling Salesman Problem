// C program to solve Traveling Salesman Problem using brute force approach
#include <stdio.h>
#include <limits.h>

#define V 4 // Number of vertices in the graph

int tsp(int graph[][V], int s);

int main() {
    int graph[][V] = {{0, 10, 15, 20},
                      {10, 0, 35, 25},
                      {15, 35, 0, 30},
                      {20, 25, 30, 0}};

    int s = 0; // Starting node
    int min_path = tsp(graph, s);

    printf("The minimum cost of the Traveling Salesman Problem is: %d\n", min_path);

    return 0;
}

int tsp(int graph[][V], int s) {
    int vertex[V];
    for (int i = 0; i < V; i++) {
        vertex[i] = i;
    }

    int min_path = INT_MAX;
    do {
        int current_pathweight = 0;
        int k = s;
        for (int i = 0; i < V; i++) {
            current_pathweight += graph[k][vertex[i]];
            k = vertex[i];
        }
        current_pathweight += graph[k][s];
        min_path = (current_pathweight < min_path) ? current_pathweight : min_path;
    } while (next_permutation(vertex, vertex + V));

    return min_path;
}
